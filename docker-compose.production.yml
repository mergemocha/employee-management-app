version: "3"
services:
  api:
    container_name: api
    build:
      context: .
      dockerfile: Dockerfile
      cache_from:
        - node:alpine
    entrypoint:
      - bash
      - -c
      - |
        if [[ -f .firstboot ]]; then node .; fi
        until curl -sSL mongodb-primary:27017; do echo "Primary database not yet ready, sleeping." && sleep 3; done
        echo "Primary database ready."
        until curl -sSL mongodb-replica:27017; do echo "Secondary database not yet ready, sleeping." && sleep 3; done
        echo "Replica database ready."
        export MONGOSH_VERSION=$$(curl -sSL https://api.github.com/repos/mongodb-js/mongosh/releases | jq -r '.[0].name')
        curl -L https://downloads.mongodb.com/compass/mongosh-$$MONGOSH_VERSION-linux-x64.tgz -o /tmp/mongosh.tgz
        mkdir /tmp/mongosh
        tar -xf /tmp/mongosh.tgz -C /tmp/mongosh --wildcards '**/bin/mongosh' --transform 's/.*\///g'
        /tmp/mongosh/mongosh -- $$(cat production.env | awk -F '="' '/MONGO_URL/{print $$NF}' | sed 's/.$$//') /docker-entrypoint-initdb.d/mongo-post-init.js
        npm run prisma:up
        npm run build
        touch .firstboot
        node .
    command: node .
    env_file:
      - production.env
    depends_on:
      - mongodb-primary
      - mongodb-replica
    volumes:
      - ./docker-entrypoint-initdb.d/mongo-post-init.js:/docker-entrypoint-initdb.d/mongo-post-init.js
  mongodb-primary:
    container_name: mongodb-primary
    image: mongo:latest
    entrypoint:
      - bash
      - -c
      - |
        chmod 400 /docker-entrypoint-initdb.d/prod.key
        chown 999:999 /docker-entrypoint-initdb.d/prod.key
        exec docker-entrypoint.sh $$@
    command: mongod --bind_ip_all --replSet mongo-cluster --keyFile /docker-entrypoint-initdb.d/prod.key
    restart: always
    environment:
      NODE_ENV: production
    env_file:
      - mongodb.env
    ports:
      - 27017:27017
    volumes:
      - ./docker-entrypoint-initdb.d/mongo-init.sh:/docker-entrypoint-initdb.d/00-mongo-init.sh
      - ./docker-entrypoint-initdb.d/mongo-post-init.js:/docker-entrypoint-initdb.d/mongo-post-init.js
      - ./docker-entrypoint-initdb.d/prod.key:/docker-entrypoint-initdb.d/prod.key
  mongodb-replica:
    container_name: mongodb-replica
    image: mongo:latest
    entrypoint:
      - bash
      - -c
      - |
        chmod 400 /docker-entrypoint-initdb.d/prod.key
        chown 999:999 /docker-entrypoint-initdb.d/prod.key
        exec docker-entrypoint.sh $$@
    command: mongod --bind_ip_all --replSet mongo-cluster --keyFile /docker-entrypoint-initdb.d/prod.key
    restart: always
    depends_on:
      - mongodb-primary
    env_file:
      - mongodb.env
    ports:
      - 27018:27017
    volumes:
      - ./docker-entrypoint-initdb.d/mongo-init.sh:/docker-entrypoint-initdb.d/00-mongo-init.sh
      - ./docker-entrypoint-initdb.d/mongo-post-init.js:/docker-entrypoint-initdb.d/mongo-post-init.js
      - ./docker-entrypoint-initdb.d/prod.key:/docker-entrypoint-initdb.d/prod.key
